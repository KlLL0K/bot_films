import logging
from aiogram import Bot, Dispatcher, types
from aiogram.dispatcher.filters import CommandStart, AdminFilter
from aiogram.types import ParseMode, BotCommand, BotCommandScopeDefault, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils import executor
from main import TOKEN
from filters import IsAdminFilter
API_TOKEN = TOKEN
logging.basicConfig(level=logging.INFO)
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)


def get_menu():
    menu_kb = InlineKeyboardMarkup(roe_width=2)
    pizza_button = InlineKeyboardButton(text="Pizzaüçï", callback_data='pizza_cat')
    snack_button = InlineKeyboardButton(text="Snacküçü", callback_data='snacks_cat')
    menu_kb.insert(pizza_button)
    menu_kb.insert(snack_button)
    return menu_kb
# ================================================================


@dp.message_handler(commands='menu')
async def menu_bot(message: types.Message):
    await message.answer("–¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∫–æ–º–ø–∞–Ω–∏—é –¥—Å—Ç–∞–≤–∫–∏",reply_markup=get_menu())


async def set_default_commands(bot: Bot):
    return await bot.set_my_commands(
        commands=[
            BotCommand('menu', "–í—ã–≤–µ—Å—Ç–∏ –º–µ–Ω—é"),
            BotCommand('help', "–ü–æ–º–æ—â—å"),
            BotCommand('support', "–ø–æ–¥–¥–µ—Ä–∂–∫–∞")
        ],
        scope=BotCommandScopeDefault()
    )


@dp.message_handler(AdminFilter(), CommandStart())
async def admin_start(message: types.Message):
    await message.reply('–∫–æ–º–∞–Ω–Ω–¥—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã')
    await set_default_commands(message.bot)

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)